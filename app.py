# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WIVfR49pl9gtcZQJ3OCchp42FWB2_Pbs
"""

import streamlit as st
import joblib
import numpy as np

# Load model and tools
model_data = joblib.load("/content/emotion_classifier.pkl")
model = model_data['model']
vectorizer = model_data['vectorizer']
label_encoder = model_data['label_encoder']
rules = model_data['alert_rules']

# Emotion name mapping (if using encoded labels)
emotion_names = {
    0: 'sadness',
    1: 'joy',
    2: 'fear',
    3: 'anger',
    4: 'surprise',
    5: 'neutral'
}

def decode(idx):
    return emotion_names.get(idx, "unknown")

def predict_emotion(text):
    X = vectorizer.transform([text])
    proba = model.predict_proba(X)[0]
    idx = np.argmax(proba)
    emotion = decode(idx)
    confidence = proba[idx]
    alert = None

    if confidence >= rules['threshold']:
        if emotion in rules['high_risk']:
            alert = 'HIGH_RISK'
        elif emotion in rules['medium_risk']:
            alert = 'MEDIUM_RISK'

    return emotion, confidence, alert

# Streamlit UI
st.title("ðŸ’¬ Tweet Emotion Classifier")
st.write("Enter a tweet and this app will predict the emotion behind it!")

user_input = st.text_area("Enter your tweet here:")

if st.button("Predict"):
    if user_input.strip() == "":
        st.warning("Please enter some text.")
    else:
        emotion, confidence, alert = predict_emotion(user_input)
        st.success(f"Emotion: **{emotion}**")
        st.info(f"Confidence: {confidence:.2f}")
        if alert:
            st.error(f"ðŸš¨ Alert: {alert}")